{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-14T06:59:51.918Z",
    "end": "2023-11-14T07:00:10.092Z",
    "duration": 18174,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "404af3df-e0bb-4afd-a55d-b97c7668bf52",
      "title": "",
      "fullFile": "C:\\xampp\\htdocs\\MainPortal_Development\\tests\\kpiDesktopTest.js",
      "file": "\\tests\\kpiDesktopTest.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 11433,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "let options = new chrome.Options();\noptions.addArguments(\"start-maximized\");\noptions.addArguments(\"disable-infobars\");\noptions.addArguments(\"--disable-extensions\");\n// options.addArguments(\"headless\");\noptions.excludeSwitches(\"enable-logging\");\ndriver = await new Builder()\n    .forBrowser(\"chrome\")\n    .setChromeOptions(options)\n    .build();\nawait driver.get(\"http://127.0.0.1:8000/Main\");\nawait driver.manage().addCookie({\n    name: \"gtls_session\",\n    value: \"eyJpdiI6InNlL2dBemdzZ1BqNXdKclF2N3VDMlE9PSIsInZhbHVlIjoiNUIwY21ML3RMRHhjbGR5QWJUbzdwMFVudjlnYjBkSklWYjg1enUyNzIwem5kTk5hNzM4VHB6KzVxMW84d1dNaEZ2YXRVSVBpQWFkYlF3Z0lMbWVydm1BT0JCMklYMnVWREVEWUJqK3JsdlBNSXZHWVhBdWZLMTVVZEVPV01LcFIiLCJtYWMiOiI2Yzg5N2EwYWIwOWQ1OWIzZjI3YWQxMzAzYTk3ZWZkYTUwMjUxMjBhYjEwMmE2NzNmNjdkY2VjMDA3NjUxZDMxIiwidGFnIjoiIn0%3D\",\n});\nawait driver.get(\"http://127.0.0.1:8000/Main\");",
          "err": {},
          "uuid": "9ab57223-ade5-44a8-99f0-daad06af9055",
          "parentUUID": "404af3df-e0bb-4afd-a55d-b97c7668bf52",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a11aedc0-49ae-4f13-b849-8a8d718ff949",
          "title": "Testing Holidays",
          "fullFile": "C:\\xampp\\htdocs\\MainPortal_Development\\tests\\kpiDesktopTest.js",
          "file": "\\tests\\kpiDesktopTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Filter Holidays by state",
              "fullTitle": "Testing Holidays Filter Holidays by state",
              "timedOut": false,
              "duration": 6734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let KPIBtn = await driver.wait(\n        until.elementLocated(\n            By.xpath(\n                \"/html/body/div[1]/div/div/div[2]/div/div/div/div/div[1]/div/div/div/div/div/div/div[2]/nav/div[3]/div/button\"\n            )\n        )\n    );\n    await driver.wait(until.elementIsEnabled(KPIBtn));\n    await KPIBtn.click();\n    let HolidaysBtn = await driver.wait(\n        until.elementLocated(By.id(\"Holidays\"))\n    );\n    await driver.sleep(100);\n    await driver.wait(until.elementIsEnabled(HolidaysBtn));\n    await HolidaysBtn.click();\n    await driver.sleep(400);\n    let stateInput = await driver.wait(\n        until.elementLocated(\n            By.xpath(\n                '//*[@id=\"app\"]/div/div/div[2]/div/div/div/div/div[2]/div/div/div/div/div/div[2]/div/div/div[1]/div[1]/div[1]/div[1]/div[1]/div[3]/div[3]/div[1]/div[1]/span/input'\n            )\n        )\n    );\n    await stateInput.sendKeys(\"NAT\");\n    await driver.sleep(2000);\n    const cellItems = await driver.findElements(\n        By.className(\"InovuaReactDataGrid__cell\")\n    );\n    const filteredItems = [];\n    for (let cell of cellItems) {\n        const style = await cell.getAttribute(\"style\");\n        if (style === 'left: 566px') {\n            filteredItems.push(element);\n        }\n    }\n    console.log(filteredItems);\n    for (let ele of filteredItems) {\n        const text = await ele.getText();\n        console.log(text);\n        if (text != \"NAT\") {\n            assert.ok(false, \"Value does not match filtered value\");\n        }\n    }\n} catch (err) {\n    assert.ok(false, err);\n}",
              "err": {},
              "uuid": "976546c3-f5c2-4361-a336-1a48062949fd",
              "parentUUID": "a11aedc0-49ae-4f13-b849-8a8d718ff949",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "976546c3-f5c2-4361-a336-1a48062949fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/xampp/htdocs/MainPortal_Development/test-reports",
        "reportFilename": "testResults",
        "timestamp": true,
        "autoOpen": true
      },
      "version": "6.2.0"
    }
  }
}