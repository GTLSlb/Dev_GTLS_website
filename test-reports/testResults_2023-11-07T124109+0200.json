{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-07T10:41:00.182Z",
    "end": "2023-11-07T10:41:09.680Z",
    "duration": 9498,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8045b5ad-3f8a-4654-9492-99bcdb566112",
      "title": "",
      "fullFile": "C:\\xampp\\htdocs\\MainPortal_Development\\tests\\iphoneTest.js",
      "file": "\\tests\\iphoneTest.js",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 4362,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "let options = new chrome.Options();\noptions.addArguments(\"start-maximized\");\noptions.addArguments(\"disable-infobars\");\noptions.addArguments(\"--disable-extensions\");\n// options.addArguments(\"headless\");\noptions.excludeSwitches(\"enable-logging\");\ndriver = await new Builder()\n    .forBrowser(\"chrome\")\n    .setChromeOptions(options)\n    .build();\nawait driver.manage().window().setRect({ width: 390, height: 844 });\nawait driver.get(\"http://127.0.0.1:8000/Main\");\nawait driver.manage().addCookie({\n    name: \"gtls_session\",\n    value: \"eyJpdiI6IlNHOXhPcmpScG52SC9iaE40Nm5KZ1E9PSIsInZhbHVlIjoiOUZKOTV3VzA5TlV5K3Vpcm15a25LOWxqdndsZzgyR2dySmJQWDF6Nm5uTklMR1JBa2VoblhKQVJwclNZY1ozbnQ2K2RsWUJoNXc5U3FVWXhZWVpWbDcyN25ITEdFWVZTNXM3RTdWcEZaTUk1cVNERFkxQVNIVUJwbXptTTJtSWIiLCJtYWMiOiIxZGZkMzQ4YjVhYWI1NjFkYjYwYTQwMGQ3Y2MwMDBjMzc3YmUyNWEyZDc4YzA0MWFmZTU1MWQ3NTg4NDBlMzM4IiwidGFnIjoiIn0%3D\",\n});\nawait driver.get(\"http://127.0.0.1:8000/Main\");",
          "err": {},
          "uuid": "7701b463-967d-4070-a894-069d17476d9f",
          "parentUUID": "8045b5ad-3f8a-4654-9492-99bcdb566112",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4427533-bfcf-4d66-9522-2db78f504e57",
          "title": "Testing GTAM/Apps",
          "fullFile": "C:\\xampp\\htdocs\\MainPortal_Development\\tests\\iphoneTest.js",
          "file": "\\tests\\iphoneTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "checks Apps/GTMS default title text and style in Chrome browser iphone view",
              "fullTitle": "Testing GTAM/Apps checks Apps/GTMS default title text and style in Chrome browser iphone view",
              "timedOut": false,
              "duration": 1797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000);\ntry {\n    let navBtn = await driver.wait(\n        until.elementLocated(\n            By.xpath('//*[@id=\"app\"]/div/div/header/div/button')\n        )\n    );\n    await driver.wait(until.elementIsEnabled(navBtn));\n    navBtn.click();\n    \n    let childElement = await driver.wait(\n        until.elementLocated(\n          By.id('GTAM')\n        )\n      );\n    \n    let gtamBtn = childElement.findElement(By.xpath('..'));\n    await driver.wait(until.elementIsEnabled(gtamBtn));\n    await gtamBtn.click();\n    let appsBtn = await driver.wait(\n        until.elementLocated(By.id(\"Apps\"))\n    );\n    await driver.executeScript(\n        \"arguments[0].scrollIntoView();\",\n        appsBtn\n    );\n    await driver.wait(until.elementIsEnabled(appsBtn));\n    await appsBtn.click();\nlet appsGTMS = await driver.wait(\n    until.elementLocated(By.id(\"Gold Tiger Management System\"))\n);\nawait driver.wait(until.elementIsEnabled(appsGTMS));\nawait appsGTMS.click();\nlet gtmsTitle = await driver\n    .wait(\n        until.elementLocated(\n            By.xpath(\n                '//*[@id=\"app\"]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[4]/div/div[2]/div[1]/h1'\n            )\n        )\n    )\n    .getText();\nlet gtmsSubTitle = await driver\n    .wait(\n        until.elementLocated(\n            By.xpath(\n                '//*[@id=\"app\"]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[4]/div/div[2]/div[1]/p'\n            )\n        )\n    )\n    .getText();\nif (\n    gtmsTitle == \"GTMS\" &&\n    gtmsSubTitle == \"Gold Tiger Management System\"\n) {\n    assert.ok(true);\n} else {\n    assert.ok(false, \"Apps/GTMS title and subtitle are incorrect\");\n}\n    }catch(err){\nassert.ok(false, err)\n    }",
              "err": {},
              "uuid": "7f2002ba-9403-449d-8289-ea1523606b6e",
              "parentUUID": "e4427533-bfcf-4d66-9522-2db78f504e57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks Apps/GTMS app default page style in Chrome browser iphone view",
              "fullTitle": "Testing GTAM/Apps checks Apps/GTMS app default page style in Chrome browser iphone view",
              "timedOut": false,
              "duration": 1054,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000);\nlet pagesBtn = await driver.wait(until.elementLocated(By.id(\"Pages\")));\nlet pagesClass = await pagesBtn.getAttribute(\"class\");\nconst hasDesiredClasses =\n    pagesClass.includes(\"text-dark\") &&\n    pagesClass.includes(\"border-b-4\") &&\n    pagesClass.includes(\"border-goldd\") &&\n    pagesClass.includes(\"font-bold\");\nif (hasDesiredClasses) {\n    let title = await driver\n        .findElement(\n            By.xpath(\n                '/html/body/div[1]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[5]/div/div/div[4]/div/div[1]/div/div[1]/h1'\n            )\n        )\n        .getText();\n    if (title == 'GTMS') {\n        assert.ok(true);\n    } else {\n        assert.ok(false, \"Apps/GTMS title in pages is incorrect\");\n    }\n} else {\n    assert.ok(false, \"Apps/GTMS pages style is incorrect\");\n}",
              "err": {},
              "uuid": "6eaa2254-4e82-4741-a26b-4b071654b4af",
              "parentUUID": "e4427533-bfcf-4d66-9522-2db78f504e57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks Apps/d default title text and style in Chrome browser iphone view",
              "fullTitle": "Testing GTAM/Apps checks Apps/d default title text and style in Chrome browser iphone view",
              "timedOut": false,
              "duration": 1240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(500);\ntry {\n    let navBtn = await driver.wait(\n        until.elementLocated(\n            By.xpath('//*[@id=\"app\"]/div/div/header/div/button')\n        )\n    );\n    await driver.wait(until.elementIsEnabled(navBtn));\n    navBtn.click();\n    \n    let childElement = await driver.wait(\n        until.elementLocated(\n          By.id('GTAM')\n        )\n      );\n    \n    let gtamBtn = childElement.findElement(By.xpath('..'));\n    await driver.wait(until.elementIsEnabled(gtamBtn));\n    await gtamBtn.click();\n    let appsBtn = await driver.wait(\n        until.elementLocated(By.id(\"Apps\"))\n    );\n    await driver.executeScript(\n        \"arguments[0].scrollIntoView();\",\n        appsBtn\n    );\n    await driver.wait(until.elementIsEnabled(appsBtn));\n    await appsBtn.click();\nlet appsD = await driver.wait(until.elementLocated(By.id(\"d\")));\nawait appsD.click();\nlet dTitle = await driver\n    .wait(\n        until.elementLocated(\n            By.xpath(\n                '//*[@id=\"app\"]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[4]/div/div[2]/div[1]/h1'\n            )\n        )\n    )\n    .getText();\nlet dSubTitle = await driver\n    .wait(\n        until.elementLocated(\n            By.xpath(\n                '//*[@id=\"app\"]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[4]/div/div[2]/div[1]/p'\n            )\n        )\n    )\n    .getText();\nif (dTitle == \"d\" && dSubTitle == \"d\") {\n    assert.ok(true);\n} else {\n    assert.ok(false, \"Apps/d title and subtitle are incorrect\");\n}\n    }catch(err){\nassert.ok(false, err)\n    }",
              "err": {},
              "uuid": "860aaecc-b9e5-4186-9003-a93331dfe257",
              "parentUUID": "e4427533-bfcf-4d66-9522-2db78f504e57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "checks Apps/d app default page style in Chrome browser iphone view",
              "fullTitle": "Testing GTAM/Apps checks Apps/d app default page style in Chrome browser iphone view",
              "timedOut": false,
              "duration": 1032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(1000);\nlet pagesBtn = await driver.wait(until.elementLocated(By.id(\"Pages\")));\nlet pagesClass = await pagesBtn.getAttribute(\"class\");\nconst hasDesiredClasses =\n    pagesClass.includes(\"text-dark\") &&\n    pagesClass.includes(\"border-b-4\") &&\n    pagesClass.includes(\"border-goldd\") &&\n    pagesClass.includes(\"font-bold\");\nif (hasDesiredClasses) {\n    let title = await driver\n        .findElement(\n            By.xpath(\n                '/html/body/div[1]/div/div/div[2]/div[1]/div/div[2]/div/div/div/div/div[5]/div/div/div[4]/div/div[1]/div/div[1]/h1'\n            )\n        )\n        .getText();\n    if (title == \"d\") {\n        assert.ok(true);\n    } else {\n        assert.ok(false, \"Apps/d title in pages is incorrect\");\n    }\n} else {\n    assert.ok(false, \"Apps/d pages style is incorrect\");\n}",
              "err": {},
              "uuid": "95ab9a82-0fc7-403a-8937-746d652a9698",
              "parentUUID": "e4427533-bfcf-4d66-9522-2db78f504e57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f2002ba-9403-449d-8289-ea1523606b6e",
            "6eaa2254-4e82-4741-a26b-4b071654b4af",
            "860aaecc-b9e5-4186-9003-a93331dfe257",
            "95ab9a82-0fc7-403a-8937-746d652a9698"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "C:/xampp/htdocs/MainPortal_Development/test-reports",
        "reportFilename": "testResults",
        "timestamp": true,
        "autoOpen": true
      },
      "version": "6.2.0"
    }
  }
}